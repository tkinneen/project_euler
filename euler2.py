#!/usr/bin/python
# Project Euler - Problem 2
# Author: Timothy Kinneen
# Version 1.0.1 
# ------------------------------------------------------------------
# Description:
#
# Each new term in the Fibonacci sequence is generated by adding the
# previous two terms. By starting with 1 and 2, the first 10 terms will be:
#
# 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
#
# By considering the terms in the Fibonacci sequence whose values do not
# exceed four million, find the sum of the even-valued terms.
#
# Answer: 4613732
# ------------------------------------------------------------------

import time

# Records the time the script is started
start = time.time()

# These variables hold last two numbers in the Fibonacci sequence
num1 = 1
num2 = 2
# Holds each newly calculated Fibonacci number 
fib = 1
# Holds the sum of all even Fib numbers that have been calculated 
even_sum = 2

# Generates a new Fibonacci number each loop until 4 million. If a Fib
# number is even, it is added to the the running sum.
while fib < 4000001:
    fib = num1 + num2
    num1 = num2
    
    num2 = fib

    if fib % 2 == 0:
        even_sum = even_sum + fib

print('Sum of all even Fibonacci numbers below 4,000,000: ', even_sum)
    
# Records script end time, then calculates running time
end = time.time()
time_taken = end - start

# Outputs script run time
print()
print('=================================')
print('Script completed in {0:.2f} seconds.'.format(time_taken))
